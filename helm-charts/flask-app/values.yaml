# Default values for flask-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: progerjkd/flask-app
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 5000

ingress:
  enabled: true
  # className: "alb"
  annotations: 
    kubernetes.io/ingress.class: nginx
    # ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/target-type: ip
    # alb.ingress.kubernetes.io/tags: Environment=dev
    # alb.ingress.kubernetes.io/group.name: my-group
    # # alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    # alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    # alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:815125368722:certificate/55cabade-6ae4-4bd3-9c79-c87298d4f086
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: flask.example.org
      paths:
        # - path: /hello/*
        #   pathType: ImplementationSpecific
        - path: /*
          pathType: ImplementationSpecific
          # pathType: Prefix
  tls:
   - secretName: chart-example-tls
     hosts:
       - flask.example.org



###########
# ingress:
#   enabled: true
#   className: "alb"
#   annotations: 
#     # kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/tags: Environment=dev
#     alb.ingress.kubernetes.io/group.name: my-group
#     # alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
#     alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:815125368722:certificate/55cabade-6ae4-4bd3-9c79-c87298d4f086
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: prod.stem.devopswarrior.io
#       paths:
#         - path: /hello/*
#           pathType: ImplementationSpecific
#         - path: /
#           pathType: ImplementationSpecific
#           # pathType: Prefix
#   # tls:
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - prod.stem.devopswarrior.io
###########

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 20
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
